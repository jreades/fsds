---
author: "Jon Reades"
email: "j.reades@ucl.ac.uk"
title: "Tools of the Trade"
other: ""
date-as-string: "1st October 2025"
format: revealjs
---

## Principles

- Software should be *free* (as far as practicable).
- Software should be *open* (as far as practicable).
- Software should *run* on all platforms.
- Software should *reflect* what you will encounter in the 'real world'.


## Tools to Make Your Life Easier

1. **OneDrive** (or Dropbox): keep your stuff backed up in the cloud.
2. **Slack**: get help (or just tips and tricks) from peers and staff
3. **Docker**: virtualisation platforms to ensure you don't 'hose' your computer.
4. **Python**: how we do 'data science'.
5. **GitHub**: manage your code, your data, even your essays/reports.
6. **Markdown**: focus on the *right* things while you write and treat your essays like code!
7. **Quarto**: convert Markdown+Python to pretty documents/web pages.
8. **LLMs**: assistance in sketching out code snippets/validation.


## OneDrive/Dropbox {.smaller}

:::: {.columns}
::: {.column width=50%}
![](./img/Dropbox.png)
:::
::: {.column width=50%}
![](./img/OneDrive.png){width=50%}
:::
::::

OneDrive and Dropbox are 'cloud-based file synchronisation tools': files placed in the special folder are automatically uploaded to servers, and automatically downloaded to any _other_ computer on which you have set up the service. Changes are also synchronised 'every time' you save the file.

## Why Use It?

We want you to use OneDrive and/or Dropbox for four reasons:

1. You can access your files anywhere in the world via the Desktop or Web.
2. You have an backup of all of your work, even if your computer has a complete meltdown.
3. You have *limited* ‘versioning’ support, so if you accidentally overwrite an essay or file, you can recover a previous version.
4. This is how we collaborate, and it’s how many businesses work as well.

## We Recommend... 

That you keep *all* files that *aren't* in GitHub in your Dropbox or OneDrive folder. This applies to all your CASA MSc work but could be especially useful for ensuring that **data files** used as part of your group work are readily accessible!

## Slack


![](./img/Slack.png)

Slack is a “messaging app for teams” that is designed to reduce email, organise conversations & topics of discussion, and pull in relevant data from a host of other services in a flexible, fully-searchable way. 


## Why Use It?


We want you to use Slack for four reasons:

1. Moodle is clunky and formal—it works well for one-to-many communication, but not so much for ‘chat’.
2. Slack offers a searchable history^[Up to a point, we don't pay for the permanent history.]—you will have access to this archive for as long as you need it.
3. You (and we) can access Slack on every major OS (OSX, Windows, iOS, Android, and Windows Phone) and via a browser *quickly*.
4. Slack is used in the ‘real world’ by everyone from Apple to PayPal and the JPL. This is how developers work.


## We Recommend...

Install the Slack client on your phone and on your personal computer and start using it as *the* way to ask questions, share answers, and generally keep ‘up to date’ on things across the entire MSc.

**Workspace**: {{< var module.slack >}}

*P.S.* Unless a question is **personal** it should normally be asked in the appropriate module channel.


## Docker

![](img/Docker.png)

Docker "makes development efficient and predictable" because it is "used through the development lifecycle for fast, easy and portable application development".

## Why Use It?

Docker is a 'virtualisation platform' that allows you to run a *second (virtual) computer* on your personal computer. We use it for four reasons:

1. Easier installation than Anaconda Python and everyone has the same versions of every library.
3. No spillover effects since each container is isolated.
3. Easy to tidy up when you’re done or add new containers when you start something new (e.g. PostgreSQL).
4. Used in the ‘real world’ by *many* companies (JP Morgan Chase, GSK, PayPal, Twitter, Spotify, Uber...).


## We Recommend...

Using Docker because configuring a development machine is hard, this makes it simple. If a Docker image works for us then we *know* [^1] it works for you. 

[Docker Desktop](https://docker.com/products/docker-desktop) with either:

1. `{{< var docker.all >}}` (Windows and Older Macs)
2. `{{< var docker.mac >}}` (Newer Macs)

[^1]: Not always true, alas.

<!-- >
## Anaconda Python

![](img/Anaconda.png)

Anaconda Python is a 'flavour' of Python that comes packaged with useful tools for configuring and management. If virtualisation is too resource-intensive for your computer (*e.g.* because it’s older or doesn’t have enough RAM) then installing Python directly is the next-best option.


## Why Use It?


We use Anaconda Python for three reasons:

1. It is easy to create and configure virtual environments (each research project has its own environment).
2. Use of channels allows installation of cutting-edge libraries not yet packaged for ‘regular’ Python (install from GitHub, etc.)
3. Widely supported by developers with builds for most Operating Systems and a focus on data science applications.

It's what we use on the Docker image as well.


## We Recommend...


If Docker doesn't work on your computer, then this is how we will get you up and running because it’s (fairly) robust and ‘standard issue’. However, we *can’t* guarantee you’ll get the same versions of every package as installed on the virtualised systems so differences may emerge.

You'll need to download the '[Individual Edition](https://www.anaconda.com/download/)' installer[^unless]

[^unless]: Unless your computer is very, very old.

--> 

## Large Language Models (LLMs)

![](img/OpenAI.png)

ChatGPT from OpenAI (an increasingly 'ironic' name) is simply the most famous of a growing number of Large Language Models that draw on information found on the web and in open texts to perform sophisticated summarisation tasks.


## Why Use It?


Many programmers are starting to use LLMs as part of their coding for three reasons:

1. They can help to spot bugs, redundancy, and other issues that impact the performance of large applications (i.e. *feedback*).
2. They can provide information about different libraries and strategies the developer can use, as well as completing code begun by the developer (i.e. *guidance* or *training*).
3. They can help to 'translate' code and design patterns between languages (i.e. *re-use*).

This is very much a 'brave new world' and we are all trying to figure it out on the fly.

## Danger, Will Robinson!

Here's what we've noticed about ChatGPT's output so far:

- Over-use of flowery language (e.g. 'intricate methodologies', 'exhaustive reviews', ...).
- Lack of overall structure/coherence (i.e. individual paragraphs seem reasonable but the whole doesn't 'work' as a single output).
- Poor referencing, including the use of non-existent or irrelevant references (i.e. papers that don't actually exist, or that seem superficially useful but are not relevant in practice).
- The more specific the information, the less likely it is to be *correct* (e.g. Who is Jon Reades? vs. What are the main areas where NLP is useful in built environment research?)

## Over-Confidence in Action {.smaller}

Who is Jon Reades?^[And, by the way, there's only *one* of me!]

> Jon Reades is a Senior Lecturer in the Department of Geography at University College London (UCL). He is also the director of the MSc in Smart Cities and Urban Analytics program at UCL.
>
> Reades' research focuses on the intersection of cities, data, and technology, with a particular emphasis on the use of spatial data and analytics to understand urban processes and support decision-making in cities. He has published widely on topics such as spatial analysis, urban data science, and the use of smart technologies in urban planning and governance.
>
> In addition to his academic work, Reades is actively involved in a number of professional organizations and initiatives related to urban analytics and smart cities. He is a co-founder of the Urban Dynamics Institute at UCL and has served on the editorial board of several academic journals in the fields of geography and urban studies.

## Read the Fine Print

![](./img/FB_Galactica_Disclaimers.jpg){fig-align="middle" height="80%"}


## We Recommend...

LLMs like ChatGPT can help you to learn to be a better coder by providing guidance and feedback, but for many applications a competent human being will be faster and have a better grasp of the *purpose* of the code. 

::: {.callout-warning}

### LLMs as co-authors

Using ChatGPT as your co-*pilot* is not the same as using ChatGPT as your co-*author*. In this module the latter is still considered plagiarism.

:::

The people making the *best* use of LLMs are people who already know how to code or write.

## Recap

1. With Docker we have a way to create a coding environment that is *isolated* from the computer and highly *portable* across machines.
2. With OneDrive and/or Dropbox we have a place to store, backup, and share files (size limits apply).
3. With Slack we have a place to ask for/provide help.
4. With LLMs we have a personal 'tutor' who can help us to learn more quickly and effectively.

Let's turn to the rest in part 2: [Writing Code](./1.3-Writing_Code.qmd)!


## Additional Resources {.smaller}

- [What is Python?](https://www.linkedin.com/learning/python-quick-start/what-is-python)
- [Why Python?](https://www.linkedin.com/learning/python-quick-start/why-python)
- [Programming Foundations: Fundamentals](https://www.linkedin.com/learning/programming-foundations-fundamentals-3/why-python)
- [Python is eating the world](https://www.techrepublic.com/article/python-is-eating-the-world-how-one-developers-side-project-became-the-hottest-programming-language-on-the-planet/)
- [What can you do with Python?](https://www.linkedin.com/learning/python-for-students/what-can-you-do-with-python)
- [Program-Aided Language Models](https://towardsdatascience.com/program-aided-language-models-93d226c7d9a0)
- [Chain of Thought Prompting](https://cameronrwolfe.substack.com/p/chain-of-thought-prompting-for-llms)
- [ChatGPT is a blurry JPEG of the Internet](https://www.newyorker.com/tech/annals-of-technology/chatgpt-is-a-blurry-jpeg-of-the-web) ^[Probably the best 'lay person's' explanation of how LLMs work/fall apart you'll ever read.]
- [Why Meta's latest large language model survived only three days online](https://www.technologyreview.com/2022/11/18/1063487/meta-large-language-model-ai-only-survived-three-days-gpt-3-science/) ^[And this one was trained on scientific articles!]
- [Git for Decolonisation](https://www.learngit.xyz)^[Part art, part activism, part tech!]

# Thank You {background-image="/img/web/title-slide.png" background-color="#0F0C11" background-opacity="0.2"}

<h3>References</h3>