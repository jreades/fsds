---
author: "Jon Reades"
email: "j.reades@ucl.ac.uk"
title: "What Does a (Spatial) Data Scientist Do?"
other: ""
date-as-string: "1st October 2025"
format: revealjs
nocite: |
  @Xie:2024b, @Xie:2024c
---

<blockquote style="margin-top:250px">"I used to think that writing is the most trivial part of the job of a data scientist; because the analyses and numbers should speak for themselves right? **Wrong!**" ~ @Xie:2024a^[This session draws liberally on her experience.]</blockquote>

::: {.notes}

This is from an article (see references at the end) by a **practicing data scientist** on the importance of communication skills. Their argument, with which I'd broadly agree, is that:

1. Writing is used everywhere the corporate world.
2. Writing brings clarity to your thinking process.
3. Writing is the 'last mile'.

I think there's a lot you can take away from that article, so I'd strongly encourage you to read it for yourself. Notice the **focus on the 'so what'** question and the emphasis on **story telling**. If you can you do this now, you'll find the dissertation that much easier.

Keep it short. Keep it simple. Keep it direct. Signpost. Don't try to use complicated vocabulary where plain-English will do. This is something that ChatGPT gets wrong a *lot* when you ask it to do 'academic writing'.

Use figures where they replace a paragraph (or more) of content. Use a sentence where it can replace a figure (or more) of content. 

:::

---

<div style="height: 600px;">
<h1 style="margin-top: 200px; vertical-align: bottom;">So What?</h1>
<h3>(Does a Spatial Data Scientist <i>do</i>?)</h3>
</div>

::: {.notes}

Ask students what they think a data scientists does.

Good answers can be added below.

:::

## The 'Pipeline' {auto-animate=true}

- Code
- Tidy
- Analyse
- Understand
- Communicate
- Report

::: {.notes}

Here are six things that we might imagine any data scientists, spatial or otherwise, does. 

Do we think they're in the right order?

I can tell you right now that this sequence of steps is how to get a mark of between 45 and 63 in your dissertation.

:::


## The 'Pipeline' {auto-animate=true}

- Understand
- Tidy
- Code
- Report
- Analyse
- Communicate

::: {.notes}

Here's a slightly better order, here's why:

- You can't answer a question -- from your boss, from an academic, from your friends even -- if you don't understand it. So before you run off and start writing some code, the first thing you need to do is understand the problem you're trying to solve. That problem should *not* be technical, it should be *practical*. 
- Tidying the data is such a core part of what we do that it really needs to be seen as a step *before* coding, even though tidying is often done *through* code.
- Once you understand the problem you can start trying to code a solution.
- The code will allow you to produce reports. These reports might be to do with data quality, they might be diagnostics from a Random Forest Machine Learning algorithm. At each stage in the development of your results you should be generating reports that help you to better-understand your problem and work out if your code is working.
- Once the reports have given you confidence in your findings now you can actually *write* the analysis. Your analysis might lead you to realise that you need to go back and write more code and produce more reports, but that's *normal*.
- Finally, you need to work out how to *communicate* your analysis. If you *understand* the problem then you'll find this process rewarding. If you don't then you'll find it frustrating and want to brush it off quickly.

So the fact these are in a list is still rather misleading because at each point you get feedback effects, and it's *also* a loop.

:::

## How to Understand?

<blockquote style="margin-top:250px">How should we do this?</blockquote>

## How to Understand?

<blockquote style="margin-top:250px">~~How should we do this?~~</blockquote>

<blockquote>Why are we doing this?</blockquote>


::: {.notes}

When you asked 'Why are we doing this?', often this is dictated by our user and they don't often listen to other ways of doing things, in our meeting earlier where we talked about 'as the crow flies' for nearest neighbour instead of using a network, this is often ignored by our 'customers'. 

:::

## How to Report?

<blockquote style="margin-top:250px;">This is the number.</blockquote>

## How to Report?

<blockquote style="margin-top:250px;">~~This is the number.~~</blockquote>

<blockquote>These are the takeaways.</blockquote>

## How to Analyse?

<blockquote style="margin-top:250px;">These are the methods we can use.</blockquote>

## How to Analyse?

<blockquote style="margin-top:250px;">~~These are the methods I can use.~~</blockquote>

<blockquote>This is the method that matches the need.</blockquote>


::: {.notes}

When you asked 'why are we using this method', often this is often ignored by our 'customers'. Context gets overlooked. Things are usually rushed and they don't look at the wider picture, other data sources and methods if it will delay the answers.

:::

## How to Communicate?

<blockquote style="margin-top:250px;">What do I need to say?</blockquote>

## How to Communicate?

<blockquote style="margin-top:250px;">~~What do I need to say?~~</blockquote>

<blockquote>Who needs to know?</blockquote>

## Tell Me a Story {auto-animate=true}

<blockquote style="margin-top:250px;">All data science is, ultimately, a story.</blockquote>

## Tell Me a Story {auto-animate=true}

<blockquote style="margin-top:250px;">All data science is, ultimately, a story.</blockquote>
<blockquote>Focus on the 'so what'.</blockquote>

## Tell Me a Story {auto-animate=true}

<blockquote style="margin-top:250px;">All data science is, ultimately, a story.</blockquote>
<blockquote>Focus on the 'so what'.</blockquote>
<blockquote>Don't bury the lede.</blockquote>

::: {.notes}

All data science is, ultimately, a story. A story of struggle. Frustration. Discovery. Learning. But you need to *tell* that story the right way.

Many of you will have learned some 'system' for writing in school. The inverted pyramid or something like that. In university, in my literary *theory* class I picked up the pyramid approach: taking a single sentence and unpacking that into the themes of the entire book.

There are mystery novels. Romance novels. Economist articles. Teen Vogue articles. They are all telling stories. They all do this in different ways.

:::

--- 

<div style="margin-top: 200px;">
<h1>Tell the *Right* Story</h1>
<h3>(And *that* requires soft-skills)^[See, e.g., @Huck:2025]</h3>
</div>

::: {.notes}

So what's fine for consultancy, might not be for academia or newspaper reporting. And vice versa. 

Across the last five years what we've noticed 

:::

## All Change?

We think the *story* is the stable part, because everything else in data science is always changing. Here's *one* vision from @Uttam:2025:

| Old Data Science Role  | New Job Title                   |
| :--------------------- | :------------------------------ |
| Data cleaning & ETL | **Analytics Engineer** (SQL + dbt + Airflow ) |
| Business dashboards | **BI Developer** (Power BI, Tabley, Looker) |
| Product experimentation | **Data Analyst** (SQL + experimentation) |
| ML Modelling            | **ML Engineer** (MLOps, pipelines, deployment) |
| Causal inference/forecasting | **Research Scientist** (Stats + PhD-level modeling) |

::: {.notes}

Those JDs apply in the private sector — you also won’t find academics identifying with those titles because we tend to me one-stop-shops in most cases. I think you can assume that trends in the corporate world tend to hit the less lucrative sectors a few years later, but it wasn’t my intention to suggest that all those roles have come into existence, rather that it’s constantly evolving in terms of how people divvy up the work.

:::

## Additional Resources {.smaller}

- [Version Control with Git](http://swcarpentry.github.io/git-novice)
- [Setting up and managing your GitHub user account](https://docs.github.com/en/github/setting-up-and-managing-your-github-user-account)
- [Personal Access Tokens on Git](https://docs.github.com/en/free-pro-team@latest/developers/apps/about-apps#personal-access-tokens)
- [Git Cheat Sheet](https://www.jrebel.com/blog/git-cheat-sheet)

# Thank You {background-image="/img/web/title-slide.png" background-color="#f7eff5" background-opacity="0.2"}

<h3>References</h3>
