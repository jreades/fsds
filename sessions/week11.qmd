---
format: html
date: last-modified
author: "Jon Reades"
title: "Dimensions in Data"
week: 11
---

::: {.callout-alert}

### Supplemental

This session is 'supplemental', meaning that it is here to help you integrate ideas seen across Term 1 (and which will be encountered again in Term 2) in a way that sup
ports long-term learning. It is **not** essential to passing the course and there are no 'bonus points' for using methods found in this session.

:::

## Overview

This is the most profoundly abstract aspect of data analysis: how to conceive of your data as a multi-dimensional space that can be reshaped and transformed to support your analytical objectives. This foregrounds the importance of judgement since, as the economist Ronald Coase [is reputed to have said](https://towardsdatascience.com/7-data-science-quotes-to-remember-e9b9da55f5e8):

> "If you torture the data long enough, it will confess."

By which you should understand that transformation *is* a form of 'torture'^[To be clear, this is a metaphor *only*!]: it can force the data to reveal relationships that were previously hidden from the data scientist. However, taken too far the data will confess to whatever you want, which isn't the purpose of critical, reproducible, sound data science!

::: {.callout-important}
## Learning Outcomes

1. A deeper understanding of the issues surrounding clustering that were covered in Week 6 of CASA0005 (GIS) and CASA0007 (QM).
2. An understanding of how data transformation works and the reasons for choosing one transform over another.
3. An appreciation of the pros and cons of at least two dimensionality reduction techniques.
::: 

## Preparatory Lectures

Come to class prepared to present/discuss:

| Session | Video | Presentation | 
| :------ | :---- | :----------- | 
| The Data Space | [Video]({{< var vids.dataspace >}}) | [Slides](../lectures/{{< meta week >}}.1-Data_Space.qmd) | 
| Transformation | [Video]({{< var vids.transformation >}}) | [Slides](../lectures/{{< meta week >}}.2-Transformation.qmd) | 
| Dimensionality | [Video]({{< var vids.dimensionality >}}) | [Slides](../lectures/{{< meta week >}}.3-Dimensionality.qmd) | 

## Other Preparation

- The following readings may be useful for reflecting on the topics covered in this session:
  - @Bunday:0000 <[URL](https://www.ucl.ac.uk/~ucahhwi/AFinalTale.pdf)>
  - @Harris:2019 <[URL](https://rpubs.com/profrichharris/uni-rankings)>
  - @Cima:2014 <[URL](https://priceonomics.com/the-most-and-least-diverse-cities-in-america/), [PDF with Figures](https://github.com/jreades/fsds/blob/master/docs/The_Least_Segregated_Cities_in_America.pdf)>


::: {.callout-tip}
## Connections

These readings provide very practical insights into the ways that data transformation can 'torture the data until it confesses' as well as how we can use data transformation to generate new ways of *seeing* our data and, consequently, new ways of understanding it. You should be coming out of these readings with a clearer understanding of why there's rarely a 'right' or 'wrong' approach to a real-world data set, but there *are* 'better' and 'worse' approaches. These readings are predominantly non-academic so they should (I hope) be fairly accessible and quick to read despite the potential dryness of the topics.

:::

## Practical

This practical will show you how data transformation is an essential, but often overlooked, aspect of data analysis: depending on the choices we make here, we can reduce (or increase) the dimensionality of the data and make it more (or less) tractable for subsequent analysis. This approach to the pipeline relies on you being able to see your data as existing in an abstract 'space' that can be manipulated in order to foreground, compress, or even mask attributes.

::: {.callout-tip}
## Connections

The practical focusses on:

- Working with a more complex data structure to create new 'grouped' variables (as the simplest form of transformation)
- Using `sklearn` to `fit` and `transform` data in a flexible manner.
- Doing two types of dimensionality reduction to demonstrate how different linear and non-linear dimensionality reduction are.
:::

To access the practical:

```{python}
#| output: asis
#| echo: false
#| code-fold: false

prac = "Practical-11-Dimensions_in_Data"

print("1. [Preview]({{< var module.web >}}practicals/" + prac + ".html)")
print("2. [Download]({{< var module.web >}}practicals/" + prac + ".ipynb)")

```

## References

