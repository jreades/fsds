---
title: "Resources"
---

## The Template(s)

To get you started, we've created a set of templates that you'll want to keep together in your Git/GitHub repo. You are free to modify the [template](https://github.com/jreades/fsds/blob/master/assessments/Group_Work.qmd) and its defaults as needed for stylistic or other purposes. 

1. The template file (`.qmd`) that we have provided: [Group_Work.qmd](https://github.com/jreades/fsds/blob/master/assessments/Group_Work.qmd). You can see both [PDF](Group_Work.pdf) and [HTML](Group_Work.html) output (and may find rendering to HTML faster when writing and testing), but please ***only* submit the raw QMD and rendered PDF** in their respective areas. Zip files and other submissions of multiple files will be ignored.
2. The CSL file (`.csl`) that governs how references are done: [harvard-cite-them-right.csl](https://github.com/jreades/fsds/blob/master/assessments/harvard-cite-them-right.csl).
3. The BibTeX file (`.bib`) that will contain any references you use: [bio.bib](https://github.com/jreades/fsds/blob/master/assessments/bio.bib) (you may also make use of [the one used for the module](https://github.com/jreades/fsds/blob/master/ref/Readings.bib) to simplify the creation/management of your bibliography)

*Note* that in our reproducibility tests we are starting with *only* the `qmd` file since you could choose to change the CSL style and will be producing your own references.

:::{.callout-note}
## Really Look at the Template!

You'll notice that the template specifies three fonts (`mainfont`, `monofont`, `sansfont`). These are installed in the Docker image. You are welcome to change the fonts used and can see what's available in the existing Docker image by asking `matplotlib` or [using the Terminal](https://askubuntu.com/questions/552979/how-can-i-determine-which-fonts-are-installed-from-the-command-line-and-what-is)... which will help you to learn about font-management. 

:::

## Rendering

The method for rendering the document will be the same on your computer as on ours, this is how we are testing for reproducibility. From the Terminal *in* Docker you use the following command to render a document in the current directory:

```bash
quarto render Group_Work.qmd --to pdf 
```

This is the command we will be running to generate the PDF output as well, though you can change the name of the input file if you like.

*However*, there are a few things to note:

1. We run this command in the *same* directory as your QMD file (i.e. in Docker we would run `cd work/<your group's name>/` then `quarto render <your group's file>.qmd --to pdf `).
2. We will have *only* your raw QMD file and *no* other files, so you need to ensure that all supporting files, data, and code are downloaded near the start of the QMD file to be available for inclusion in the render pipeline.
3. You will want to test that your QMD file renders correctly on a 'new' machine or 'clean' folder *before* submitting it.

Good luck!